{"version":3,"file":"static/js/242.6a8565d5.chunk.js","mappings":"0MACA,G,QAAA,CAAgB,QAAU,0BAA0B,QAAU,0BAA0B,OAAS,yBAAyB,cAAgB,gCAAgC,OAAS,yBAAyB,KAAO,uBAAuB,KAAO,uBAAuB,KAAO,uBAAuB,KAAO,uBAAuB,QAAU,0BAA0B,WAAa,6BAA6B,YAAc,8BAA8B,aAAe,iC,mBCGvcA,EAAW,gBAAEA,EAAQ,EAARA,SAAQ,OAAMA,EAAWC,EAAAA,cAAkBA,EAAAA,MAAQ,EAetE,EAbe,SAACC,GACZ,OACI,UAAC,KAAO,CAACC,UAAWH,EAAUI,GAAE,oBAAeF,EAAMG,IAAK,WACtD,gBAAKF,UAAWF,EAAAA,OAAS,UACrB,gBAAKK,IAAKJ,EAAMK,MAAOC,IAAI,QAE/B,iBAAKL,UAAWF,EAAAA,KAAO,WACnB,eAAIE,UAAWF,EAAAA,KAAO,SAAEC,EAAMO,QAC9B,gBAAKN,UAAWF,EAAAA,KAAO,SAAEC,EAAMQ,YAG/C,ECRA,EALgB,SAACR,GACb,OAAQ,gBAAKC,UAAWF,EAAAA,QAAU,SAAEC,EAAMS,SAC9C,E,uCCsBMC,GAAYC,EAAAA,EAAAA,GAAiB,IAW7BC,GAAuBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,UAAjBD,EAVL,SAACb,GACrB,OACI,kBAAMe,SAAUf,EAAMgB,aAAcf,UAAWF,EAAAA,WAAa,WACxD,SAACkB,EAAA,EAAK,CAACC,SAAU,CAACC,EAAAA,EAAUT,GAAYH,KAAM,iBAAkBN,UAAWF,EAAAA,YACpEqB,YAAa,+HACbC,UAAWC,EAAAA,EAAaC,UAAW,cAC1C,mBAAQtB,UAAWF,EAAAA,aAAe,SAAC,6DAG/C,IAGA,EAhCiB,SAAH,GAA0C,IAArCyB,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QAASC,EAAW,EAAXA,YAMlC,OACI,qBAASzB,UAAWF,EAAAA,QAAU,WAC1B,gBAAKE,UAAWF,EAAAA,QAAU,SACrB0B,EAAQE,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAM,CAACzB,GAAIyB,EAAEzB,GAAII,KAAMqB,EAAErB,KAAMC,KAAMoB,EAAEpB,KAAMH,MAAOuB,EAAEvB,OAAYuB,EAAEzB,GAAK,OAEhG,iBAAKF,UAAWF,EAAAA,KAAO,WACnB,gBAAKE,UAAWF,EAAAA,SAAW,SACtByB,EAASG,KAAI,SAAAE,GAAC,OAAI,SAAC,EAAO,CAAC1B,GAAI0B,EAAE1B,GAAIM,QAASoB,EAAEpB,SAAcoB,EAAE1B,GAAK,OAE1E,SAACS,EAAoB,CAACG,SAbZ,SAACe,GACnBJ,EAAYI,EAASC,eACzB,SAcJ,E,8BCvBMC,EAAkB,SAACC,GAAK,MAAM,CAChCC,OAAQD,EAAME,KAAKD,OACtB,EAWD,MATA,SAA0BE,GAMtB,OAAOC,EAAAA,EAAAA,IAAQL,EAARK,EALP,SAA2BrC,GACvB,OAAKA,EAAMkC,QACJ,SAACE,GAAS,UAAKpC,KADI,SAAC,KAAQ,CAACE,GAAG,UAE3C,GAGJ,ECHA,GAAeoC,E,QAAAA,IACXC,GACAF,EAAAA,EAAAA,KARoB,SAACJ,GAAK,MAAM,CAChCT,SAAUS,EAAMO,aAAahB,SAC7BC,QAASQ,EAAMO,aAAaf,QAC5BM,eAAgBE,EAAMO,aAAaT,eACtC,GAI4B,CACrBL,YAAAA,EAAAA,IAHR,CAKEe,E","sources":["webpack://harry-potter-social-network/./src/components/Messages/Messages.module.css?8e7e","components/Messages/Dialog/Dialog.jsx","components/Messages/Message/Message.jsx","components/Messages/Messages.jsx","hoc/withAuthRedirect.js","components/Messages/MessagesContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Messages_section__d03zV\",\"dialogs\":\"Messages_dialogs__ZLADw\",\"dialog\":\"Messages_dialog__9OHBB\",\"dialog_active\":\"Messages_dialog_active__LYQCT\",\"avatar\":\"Messages_avatar__oEJPD\",\"info\":\"Messages_info__E4bbX\",\"name\":\"Messages_name__6LjHG\",\"text\":\"Messages_text__MfJ54\",\"chat\":\"Messages_chat__JKS0q\",\"message\":\"Messages_message__rS6lN\",\"chat__form\":\"Messages_chat__form__U+Wph\",\"chat__input\":\"Messages_chat__input__4PDjJ\",\"chat__button\":\"Messages_chat__button__06yEp\"};","import React from 'react';\nimport s from '../Messages.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst isActive = ({isActive}) => isActive ? s.dialog_active : s.dialog\n\nconst Dialog = (props) => {\n    return (\n        <NavLink className={isActive} to={`/messages/${props.id}`}>\n            <div className={s.avatar}>\n                <img src={props.image} alt=\"\"/>\n            </div>\n            <div className={s.info}>\n                <h3 className={s.name}>{props.name}</h3>\n                <div className={s.text}>{props.text}</div>\n            </div>\n        </NavLink>);\n};\n\nexport default Dialog;\n","import React from 'react';\nimport s from '../Messages.module.css'\n\n\nconst Message = (props) => {\n    return (<div className={s.message}>{props.message}</div>)\n}\n\n\nexport default Message;\n","import React from 'react';\nimport s from './Messages.module.css'\nimport Dialog from \"./Dialog/Dialog\";\nimport Message from \"./Message/Message\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {CustomField} from \"../UI/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../validators/validators\";\n\n\nconst Messages = ({messages, dialogs, sendMessage}) => {\n\n    const addNewMessage = (formData) => {\n        sendMessage(formData.newMessageText)\n    }\n\n    return (\n        <section className={s.section}>\n            <div className={s.dialogs}>\n                {dialogs.map(d => <Dialog id={d.id} name={d.name} text={d.text} image={d.image} key={d.id}/>)}\n            </div>\n            <div className={s.chat}>\n                <div className={s.messages}>\n                    {messages.map(m => <Message id={m.id} message={m.message} key={m.id}/>)}\n                </div>\n                <SendMessageReduxForm onSubmit={addNewMessage}/>\n            </div>\n        </section>);\n};\nconst maxLength = maxLengthCreator(10)\nconst SendMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className={s.chat__form}>\n            <Field validate={[required, maxLength]} name={'newMessageText'} className={s.chat__input}\n                   placeholder={'Написати повідомлення...'}\n                   component={CustomField} FieldType={'textarea'}/>\n            <button className={s.chat__button}>Надіслати</button>\n        </form>\n    )\n}\nconst SendMessageReduxForm = reduxForm({form: 'dialog'})(SendMessageForm)\n\nexport default Messages;\n","import React from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nfunction withAuthRedirect(Component) {\r\n    function RedirectComponent(props) {\r\n        if (!props.isAuth) return <Navigate to='/login'/>\r\n        return <Component {...props}/>\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n\r\nexport default withAuthRedirect;\r\n","import {sendMessage} from \"../../redux/messagesReducer\";\nimport Messages from \"./Messages\";\nimport {connect} from \"react-redux\";\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst mapStateToProps = (state) => ({\n    messages: state.messagesPage.messages,\n    dialogs: state.messagesPage.dialogs,\n    newMessageText: state.messagesPage.newMessageText,\n})\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps, {\n        sendMessage,\n    })\n)(Messages);\n"],"names":["isActive","s","props","className","to","id","src","image","alt","name","text","message","maxLength","maxLengthCreator","SendMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","placeholder","component","CustomField","FieldType","messages","dialogs","sendMessage","map","d","m","formData","newMessageText","mapStateToProps","state","isAuth","auth","Component","connect","compose","withAuthRedirect","messagesPage","Messages"],"sourceRoot":""}